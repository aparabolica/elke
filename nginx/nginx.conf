# disable daemon for docker
daemon off;

error_log /logs/error.log;

worker_processes  1;

rtmp_auto_push on;

events {
  worker_connections  1024;
  use epoll;
  multi_accept on;
}

http {
  sendfile off;
  tcp_nopush on;
  aio on;
  directio 512;
  default_type application/octet-stream;

  upstream elke {
    server elke:3030;
  }

  server {
    listen 80;

    location / {
      client_max_body_size 100M;
      proxy_redirect off;
      proxy_set_header   X-Real-IP            $remote_addr;
      proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
      proxy_set_header   X-Forwarded-Proto $scheme;
      proxy_set_header   Host                   $http_host;
      proxy_set_header   X-NginX-Proxy    true;
      proxy_set_header   Connection "";
      proxy_http_version 1.1;
      proxy_pass http://elke;
    }
    location /stats {
      rtmp_stat all;
    }
  }

}

rtmp {
  server {
    listen 1935;
    chunk_size 4096;
    # App to receive stream
    application live {
      live on;
      # Permissions
      allow play all;
      allow publish all;
      # Publish control
      on_publish http://localhost/streamings/control/publish;
      on_publish_done http://localhost/streamings/control/publish_done;
      # Record original
      record all;
      record_path /data;
      on_record_done http://localhost/streamings/control/record_done;
      # Publish to public app
      # exec ffmpeg -i rtmp://localhost/$app/$name -async 1 -vsync -1
      #   -c:v libx264 -acodec copy -b:v 1920k -b:a 128k -vf "scale=1280:trunc(ow/a/2)*2" -tune zerolatency -preset veryfast -crf 23 -f flv rtmp://localhost/show/$name;
    }
    # App to public access stream
    # application show {
    #   live on;
    #   allow play all;
    #   allow publish 127.0.0.1;
    #   interleave on;
    #   wait_key on;
    # }
  }
}
